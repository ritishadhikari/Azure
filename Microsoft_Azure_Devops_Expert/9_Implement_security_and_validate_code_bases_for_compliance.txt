Introduction to Secure Devops:
    - DevSecops incorporates the security team and their capabilities into your Devops
    practices making security the responsibility of everyone on the team
    - Security needs to shift from an afterthought to being evaluated at every process
    step
    - Securing Applications is a continous process encompassing secure infrastructure,
    designing architecture with layered security, continous security validation and
    monitoring attacks
    - SQL Injection Attack:
        - It makes it possible to execute malicious SQL statements
        - Attackers can go around authentication and authorization of a web page or web 
        application and retrieve the content of the entire SQL database
        - The attackers can also use SQL injection to add, modify and delete records
        in the database
    - A Secure Devops pipeline allows development teams to work fast without breaking 
    their project by introducing unwanted security vulnerabilities
    - With SecureDevops or DevSecops, security is about securing the pipeline
    - It involves determining where to add protection to the elements that plug 
    into your build and release pipelines 
    - Security practices for detecting potential security anomalies must be as robust 
    and fast as your DevOps pipeline's other parts and it also includes infrastructure
    automation and code development
    - Secure Devops Pipelines that are not found in standard Devops Pipelines are:
        - Package Management and the approval process behind it
        - Source Scanner:
            - It is an extra step for scanning the source code which can identify
            security vulnerabilities earlier in the cycle
            - This step allows for security scanning and checking for vulnerabilities
            that are not present in the application code
            - The scanning occurs after the app is built before release and pre-release
            testing 
    - With faster delivery and better productivity, open-source (OSS) components are
    encouraged across many organizations
    - However as the dependency on these third-party OSS components increases, the risk
    of security vulnerabilities or hidden licence requirement also increases compliance
    issues
    - Several tools are available which helps CI builds to run static code analysis
    tests to ensure that the code follows all rules for both maintenance and
    security
        - SonarCube
        - CheckMarx - A static application security testing tool
        - BinSkim - A binary static analysis tool that provides security and correctness
        results for Windows Portable executibles and many more
        - Mend Software's Tool: Makes Identification process of any threat in third
        party packages instantenous
    - The Microsoft Threat Modeling Tool enables any developer or software architect to:
        - Communicate about the security design of their systems
        - Analyze those designs for potential security issues using a proven methodology
        - Suggest and manage mitigation for security issues

Implement Open Source Software:
    - The Inclusion of software components that are not built by the companies
    themselves means no complete control over the sources
    - The concerns the source component in open source packages provides are:
        - Low Quality (reliability and performance)
        - Have no maintenance
        - Contains Malicious Code
        - Have security Vulnerabilities
        - Have unfavourable licensing restrictions
    - The company's challenges are finding a way to keep the developers empowered
    and free to chose technology to use while making sure the risks for the
    company are managed as well as possible
    - Open Source Licenses:
        - A license agreement accompanies open-source software and the related
        code
        - The license describes how the source code and the components built 
        from it can be used and how any software created with it should deal
        with it
        - Even though multiple contributors generally develop open-source software
        from the community, it does not guarantee that it's secure and without 
        vulnerabilities
        - The license's impact on the downstream use of the code, components and
        and packages can be rated as High, Medium and Low, depending on the 
        copy-left, downstream or attribution nature of the license type
        - For compliance reasons, a high license rating can be considered a 
        risk for compliance, intellectual property and exclusive rights
    
    - Types of License:
        - Attribution 
            - Permissive
            - Allow practically every type of use by the software that consumes it
        - Downstream
        - Copyleft
            - Restrictive
            - It's considered viral in nature 
            - The use of the source code and its components and distribution
            of the complete software implies that all source code using it 
            should follow the same license form

Software Composition Analysis:
    - Validate Code Bases for Compliance:   
        - We need to protect information from being disclosed to people who shouldn't 
        have access
        - Also we need to ensure that the data isn't altered or destroyed when it is
        not supposed to be
        - We need to make sure we properly authenticate who is accessing the data and
        that they have the correct permissions to do so
        - We need to find evidence when something has gone wrong through historical
        or archival data or logs
        - We need to ensure that the application follows the rules and regulations 
        required to meet and we need to test it while building the code and retest it
        periodically, even after deployment
        - Rather than being a task done by security specialists, security testing
        should be part of the day-to-day delivery processes
    - Software Component Analysis:
        - Package Management:
            - Secure Devops relies on a package manager as the unique source of binary
            components
            - Using binary package management, a development team can create a local
            cache of approved components and a trusted feed for the continous 
            integration pipeline 
            - Azure Artifact:
                - Keeps your packages organized
                - Share code easily by storing Nuget, Maven, etc packages togather
                - Protects your packages 
                - Easily access all your artifacts in builds and releases as it 
                integrates natively with the Azure Pipeline CI/CD
            - Role of Open Source Components:
                - OSS components reuse comes with the risk that reused dependencies 
                can have security vulnerabilities
                - Start with the latest, correct version to avoid old vulnerabilities
                or licence misuse
                - In the release pipelines validate binaries to ensure accuracy
                - Get notifications of components vulnerabilities immediately
    - Integrate Mend with Azure Pipelines:
        - You can integrate specialist security products into your Azure Devops pipeline
        through Visual Studio Code Marketplace
        - Using Mend, you can integrate extensions with your CI/CD pipeline to address 
        Secure Devops related Issues
        - The Mend extension specifically addresses open-source security, quality and
        licence compliance for a team consuming external packages
        - It automatically detect all open-source components - including their transitive
        dependencies every time you run a build
        - You can generate a comprehensive inventory report within minutes based on 
        the last build you ran
        - Mend automatically generates an alert and provides targeted remediation 
        guidance when a new security vulnerability is discovered which include links
        to patches, fixes, relevant source files, and recommendations to change system
        configuration to prevent exploitation
        - According to a company's policies, Mend automatically approves, rejects or 
        triggers a manual approval process every time a new open-source component 
        is added to a build
        - When a developer adds a problematic open-source component, the service will 
        alert and fail the build
    - GitHub Dependabot alerts and Security Updates:
        - Detects vulnerable dependencies and sends Dependabot alerts about them 
        in several situations
            - A new vulnerability is added to the Github Advisory database
            - New Vulnerability data from Mend is processed
            - Dependency graph for a repository changes
        - Alerts are detected in public repositories by default but can be enabled for
        other repositories
        - Notifications can be sent via standard Github notification
        - A key advantage of Dependabot security updates is that they can automatically
        create pull requests
        - A developer can then review the suggested update and triage what is required
        to incorporate it
    - Integrating Software Composition Analysis checks into Pipelines:
        - Pull Request code Scan analysis integration:
            - Devops team can submit proposed changes to an application's (main) codebase
            using pull requests (PRs) where changes are continously merged with the main
            codebase to keep the main codebase up to date
            - To avoid introducing new issues, developers need to verify the effects
            of the code changes before creating a PR
            - Ideally a developer should cheak for security issues before creating a PR
            - Azure Marketplace extensions that help integrate scans during PRs 
            which allow developers to experiment with changes before submitting
            them as PR and it includes:
                - Mend
                - CheckMarx
                - Veracode
                - Black Duck by Synopsis :
                    - It is an auditing tool for open-source code to help identify,
                    fix and manage compliance
    - Tools for assess package security and licence rate:
        - One approach is provide the package in a centralized repository and inspect
        the packages part of the repository at any time (sonarcube)
        - Another approach uses tooling that scans the packages used in a build 
        pipeline and give instantanous feebback on the packages in use (mend)
        - The configuration of the scanning for license types and security vulnerability
        in the pipeline is done using appropriate build tasks in Azure Devops

Static Analyzers:
    - SonarQube:
        - SonarQube is an open source platform that is the de facto solution for 
        understanding and managing technical debt
        - It is easier to integrate with pipelines and manage technical debt
    - CodeQL:
        - Developers use CodeQL to automate security checks
        - It treats code like data that can be queried
        - CodeQL analysis consists of three phases
            - Creating a CodeQL database (based upon the code)
            - Run CodeQL queries against the database
            - Interpret the results
        - It is available as a command-line interpretor and an extension for Visual
        Studio Code

OWASP and Dynamic Analyzers:
    - The starting point for secure development is to use secure-coding practices
    - Open Web Development Security Project (OWASP) is a global charitable organization
    focussed on improving software security
    - Its stated mission is to make software security visible so that individuals and 
    corporations can make informed decisions
    - OWASP ZAP penetration test:
        - ZAP is a free penetration testing tool for beginners to professionals 
        - It includes an API and a weekly docker container image to integrate into your
        deployment process
        - The baseline CI/CD pipeline should run within a couple of minutes, making it a 
        good option for the application CI/CD pipeline, and the application CI/CD 
        pipeline should run within a couple of minutes, so you don't want to include
        any long running process
        - The nightly OWASP ZAP can spider the website and run the full-Active Scan
        to evaluate the most combinations of possible vulnerabilities
        - The OWASP ZAP/weekly docker container within Azure Container Services allows the
        latest updates to the image and enables the spin-up of multiple image instances
        so several applications within an enterprise can be scanned simultaneously
        - The benefit of using this is that the vulnerabilities are created as bugs that
        provide actionable work that can be tracked and measured
        - Once the scans have completed, the Azure Pipelines release is updated with a
        report that includes the results and bugs are created in the team's backlog
        - Resolved Bugs will close if the vulnerability has been fixed and move back 
        into in-progress if the vulnerability still exists
        - False positives can be suppressed using OWASP ZAP's context file, so only 
        valid vulnerabilities are surfaced

Implement Security and Validate Code Bases for compliance:
    - Microsoft Defender for Cloud:
        - Supports both windows and Linux OS and provides security to features in IaaS
        and PaaS scenarios
        - It is a monitoring service that provides threat protection across
        all your services both in Azure and on-premise
        - It provides security recommendations across on-premises and cloud workloads
        and automatically apply required security to new services as they come online
        - You can define a list of allowed applications to ensure that only the
        validated apps can execute
        - Uses Azure Machine Learning to detect and block malicious software from 
        being installed on your VMs and services
        - While Defender for cloud is free, to access full suite of Microsoft Services,
        you will need to ugrade to a Standard Version Subscription
        - Many organizations only respond to security incidents after an attack has
        occurred, but to reduce costs and damage, it's necessary to have an incident
        response plan before an attack occurs
        - A Security policy defines the controls recommended for resources within a 
        specified subscription or resource group
        - Defender for cloud analyzes the security state of your Azure Resources 
        and if it identifies a potential security vulnerabilities, it creates 
        recommendations based on the controls set in the security policy
    - Azure Policy:
        - It is an Azure Service that you can create, assign and manage policies
        - Policies enforce different rules and effects over your Azure resources,
        ensuring that your resources stay compliant with your standards and SLAs
        - The policy evaluates your resources by scanning for resources that don't 
        follow the policies you create
        - It has built-in policy and initiaves definitions for you to use. The 
        definitions are arranged into categories: Storage, Networking, Compute,
        Security Center and Monitoring
        - Azure Policy Integrates with Azure Devops by applying any CI/CD pipeline
        policies that apply to the pre-deployment and post-deployment of your 
        applications
        - Ex. Using Azure Policies, Check Gates provides security and compliance
        assessment on the resources with an Azure Resource Groups or subscription
        that you can specify
        - A policy definition specifies the resources to be evaluated and the actions
        to take on them
        - Policies are defined in JSON
        - Policy assignment is a policy definition that has been assigned to a specific
        scope where scope can range from a management group to a resource group
        - Child Resources will inherit any policy assignments applied to their parents
        - If a policy is applied to a resource group, it's used to all the resources
        within that resource group
        - Remediation instructs Azure Policy to run the deployIfNotExists or the tag 
        operation of the policy on existing resources
    
    - Resource Locks:
        - Locks help you prevent accidental deletion or modification of your Azure
        resources
        - You can Manage locks from the Azure Portal to lock a subscription, resource
        group or resources to prevent users from accidentally deleting or modifying
        critical resources
        - Set Lock levels to:
            - CanNotDelete:
                - Authorized users can read and modify a resource, but they can't
                delete it
            - ReadOnly:
                - Authorized users can read a resource, but they can't modify or 
                delete it
    
    - Azure BluePrints:
        - It enables cloud architects to define a repeatable set of Azure resources
        that implement and adhere to an organization's standards, patterns and 
        requirements
        - It helps development teams build and deploy new environments rapidly
        with a set of built-in components that speed up development and delivery
        - It provides a declarative way to orchestrate deployment for various resource
        templates and artifacts, including:
            - Role assignments
            - Policy assignments
            - Azure Resource Manager templates
            - Resource groups
        - Unlike in Azure Resource Manager Templates, which have no active relationship
        with the deployed resources, with Azure BluePrints, each deployment is tied to
        an Azure BluePrints package which means that the relationship with resources
        will be maintained even after deployment whch is helpful for deployment tracking
        and auditing capabilities

    - Microsoft Defender for Containers:
        - It can be enabled at the subscription level
        - It scan images that are pushed to the registry or any images pulled within
        the last 30 days or on import (when an image is imported from other locations
        like Docker Hub)
      