Introduction to Continous Delivery:
    - Eight Principles of Continous delivery:
        - The process for releasing/deploying software must be
        repeatable and reliable
        - Automate Everything
        - If something is difficult or painful, do it more Often
        - Keep everything in source control
        - Done means released
        - Build quality in
        - Everybody has responsibility for the release process
        - Improve continously
    - To deploy more often, we need to consider:
        - Software Architecture as monoliths are hard to deploy
        - Testing Strategy (manual tests don't scale well) 
        - Organization as separated business and IT departments don't work smoothly
    - Continous Delivery is a practice and is being able to deliver 
    software on-demand
    - Deploying every code change to production is what is called Continous 
    deployment

    - Feedback loops or quality gates are required for :
        - A unit test to validate the code
        - An automated build to validate the sources
        - An automated test on a Test Environment
        - Some monitor on a server
        - Usage Instrumentation in the code
    
    - Companies wants to move forward towards Continous Delivery since:
        - They see the value
        - They hear their customers
        - Companies wish to deliver their products as fast as possible
        - Quality should be higher
        - The move to production should be faster
        - Technical Debt should be lower
    - Release:
        - It includes a snapshot of all the information required to carry out all 
        the tasks and actions in the release pipeline:
            - The stages or environments
            - The tasks for each one
            - The values of task parameters and variables
            - The release policies such as trigger, approvers and release queuing
            options
        - There can be multiple deployments of each release, even for one stage
        - When a release deployment fails for a stage, you can redeploy the same
        release to that stage
        - The release pipeline contains all the steps you walk through when you move 
        your artifact from one of the artifact sources through the stages or 
        environments
        - The release is an instance of the release pipeline